{"ast":null,"code":"var _jsxFileName = \"/Users/enigma/Documents/sample-test/github-frontend/src/components/ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport ProjectCard from './ProjectCard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectList({\n  selectedLanguage,\n  sortStars,\n  sortUpdated,\n  selectedTags\n}) {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastSortCriterion, setLastSortCriterion] = useState('stars'); // Default to stars\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('http://localhost:4000/repos');\n        setProjects(response.data);\n      } catch (err) {\n        setError('Failed to fetch projects.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  // Update last sort criterion when sortStars changes\n  useEffect(() => {\n    setLastSortCriterion('stars');\n  }, [sortStars]);\n\n  // Update last sort criterion when sortUpdated changes\n  useEffect(() => {\n    setLastSortCriterion('activity');\n  }, [sortUpdated]);\n  const filteredProjects = useMemo(() => {\n    return projects.filter(project => {\n      const projectLanguages = Object.keys(project.languages || {});\n      const matchesLanguage = selectedLanguage === \"All\" || projectLanguages.includes(selectedLanguage);\n      const matchesTags = selectedTags.length === 0 || project.issues.some(issue => issue.labels.some(label => selectedTags.includes(label)));\n      return matchesLanguage && matchesTags;\n    });\n  }, [projects, selectedLanguage, selectedTags]);\n  const sortedProjects = useMemo(() => {\n    console.log('Sorting by:', lastSortCriterion);\n    if (lastSortCriterion === 'stars') {\n      return [...filteredProjects].sort((a, b) => {\n        return sortStars === 'desc' ? b.stars - a.stars : a.stars - b.stars;\n      });\n    } else {\n      return [...filteredProjects].sort((a, b) => {\n        const dateA = new Date(a.lastActivity);\n        const dateB = new Date(b.lastActivity);\n        return sortUpdated === 'recent' ? dateB - dateA : dateA - dateB;\n      });\n    }\n  }, [filteredProjects, lastSortCriterion, sortStars, sortUpdated]);\n  console.log('Sorted projects:', sortedProjects.map(p => `${p.name} (${p.stars} stars, ${p.lastActivity})`));\n  const handleSelect = projectName => {\n    setSelectedProject(prevSelected => prevSelected === projectName ? null : projectName);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-full\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500 text-center\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: sortedProjects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project,\n        isSelected: selectedProject === project.name,\n        onSelect: () => handleSelect(project.name)\n      }, project.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"dHYbwQRNPAE6zHT2adZN0eg5Vas=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","ProjectCard","axios","jsxDEV","_jsxDEV","ProjectList","selectedLanguage","sortStars","sortUpdated","selectedTags","_s","projects","setProjects","selectedProject","setSelectedProject","loading","setLoading","error","setError","lastSortCriterion","setLastSortCriterion","fetchProjects","response","get","data","err","filteredProjects","filter","project","projectLanguages","Object","keys","languages","matchesLanguage","includes","matchesTags","length","issues","some","issue","labels","label","sortedProjects","console","log","sort","a","b","stars","dateA","Date","lastActivity","dateB","map","p","name","handleSelect","projectName","prevSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isSelected","onSelect","_c","$RefreshReg$"],"sources":["/Users/enigma/Documents/sample-test/github-frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport ProjectCard from './ProjectCard';\nimport axios from 'axios';\n\nfunction ProjectList({ selectedLanguage, sortStars, sortUpdated, selectedTags }) {\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastSortCriterion, setLastSortCriterion] = useState('stars'); // Default to stars\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('http://localhost:4000/repos');\n        setProjects(response.data);\n      } catch (err) {\n        setError('Failed to fetch projects.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  // Update last sort criterion when sortStars changes\n  useEffect(() => {\n    setLastSortCriterion('stars');\n  }, [sortStars]);\n\n  // Update last sort criterion when sortUpdated changes\n  useEffect(() => {\n    setLastSortCriterion('activity');\n  }, [sortUpdated]);\n\n  const filteredProjects = useMemo(() => {\n    return projects.filter(project => {\n      const projectLanguages = Object.keys(project.languages || {});\n      const matchesLanguage = selectedLanguage === \"All\" || projectLanguages.includes(selectedLanguage);\n      const matchesTags = selectedTags.length === 0 || project.issues.some(issue =>\n        issue.labels.some(label => selectedTags.includes(label))\n      );\n      return matchesLanguage && matchesTags;\n    });\n  }, [projects, selectedLanguage, selectedTags]);\n\n  const sortedProjects = useMemo(() => {\n    console.log('Sorting by:', lastSortCriterion);\n    if (lastSortCriterion === 'stars') {\n      return [...filteredProjects].sort((a, b) => {\n        return sortStars === 'desc' ? b.stars - a.stars : a.stars - b.stars;\n      });\n    } else {\n      return [...filteredProjects].sort((a, b) => {\n        const dateA = new Date(a.lastActivity);\n        const dateB = new Date(b.lastActivity);\n        return sortUpdated === 'recent' ? dateB - dateA : dateA - dateB;\n      });\n    }\n  }, [filteredProjects, lastSortCriterion, sortStars, sortUpdated]);\n\n  console.log('Sorted projects:', sortedProjects.map(p => `${p.name} (${p.stars} stars, ${p.lastActivity})`));\n\n  const handleSelect = (projectName) => {\n    setSelectedProject((prevSelected) =>\n      prevSelected === projectName ? null : projectName\n    );\n  };\n\n  if (loading) return <div className=\"flex justify-center items-center h-full\">Loading...</div>;\n  if (error) return <div className=\"text-red-500 text-center\">{error}</div>;\n\n  return (\n    <div className=\"p-6 w-full\">\n      <div className=\"space-y-6\">\n        {sortedProjects.map((project) => (\n          <ProjectCard\n            key={project.name}\n            project={project}\n            isSelected={selectedProject === project.name}\n            onSelect={() => handleSelect(project.name)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}